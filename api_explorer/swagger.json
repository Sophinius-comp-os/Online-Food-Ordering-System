{
    "swagger": "2.0",
    "info": {
        "title": "OFOS API Endpoints",
        "description": "OFOS API endpoints for webservices",
        "contact": {
            "name": "Agriya Infoway",
            "url": "http://www.agriya.com",
            "email": "info@agriya.com"
        },
        "license": {
            "name": "Agriya Infoway Licence",
            "url": "http://www.agriya.com/"
        },
        "version": "v1.0b1"
    },
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/register": {
            "post": {
                "summary": "User register",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post. mobile_code should be like (IN / US / SG / AF / etc.)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/activation/{hash}": {
            "put": {
                "summary": "Send activation mail",
                "description": "Send activation hash code to user for activation",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to send activation mail",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Sent activation mail successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/activateUser"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "summary": "User login",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The login JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User loggedin successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/social_login": {
            "post": {
                "summary": "User social login",
                "description": "User social login",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Provider slug",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The login JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addSociallogin"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Loggedin successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "User social login for Twitter",
                "description": "User social login for Twitter",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Provider slug",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Loggedin successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/forgot_password": {
            "post": {
                "summary": "Forgot password",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The forgot password JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forgotUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User Forgot password updated successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/change_password": {
            "put": {
                "summary": "Change password",
                "description": "Change password",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to change password",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The change password JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/changePasswordUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Password changed sucessfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "summary": "Logout user",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Fetch all users",
                "description": "Returns all users from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched users",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "summary": "Fetch user",
                "description": "Returns a user based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user by its id",
                "description": "Update user by its id",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post. mobile_code should be like (IN / US / SG / AF / etc.)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user",
                "description": "Deletes a single user based on the ID supplied",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User deleted"
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "summary": "Fetch all providers",
                "description": "Returns all providers from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter provider",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched providers",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/providers/{providerId}": {
            "get": {
                "summary": "Fetch provider",
                "description": "Returns a provider based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "ID of provider to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched provider",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update provider by its id",
                "description": "Update provider by its id",
                "parameters": [
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "ID of provider to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The provider JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addProvider"
                        }
                    }
                ],
                "tags": [
                    "Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Provider updated",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "summary": "Fetch all roles",
                "description": "Returns all roles from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter role",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched roles",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles/{roleId}": {
            "get": {
                "summary": "Fetch role",
                "description": "Returns a role based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "roleId",
                        "in": "path",
                        "description": "ID of role to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched role",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/money_transfer_accounts": {
            "get": {
                "summary": "Fetch all money transfer accounts",
                "description": "Returns all money transfer accounts from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter money transfer account",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of user",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer accounts",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new money transfer account",
                "description": "Creates a new money transfer account",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "New money transfer account added",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/money_transfer_accounts/{moneyTransferAccountId}": {
            "get": {
                "summary": "Fetch money transfer account",
                "description": "Returns a money transfer account based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of user",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer account",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update money transfer account by its id",
                "description": "Update money transfer account by its id",
                "parameters": [
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account updated",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete money transfer account",
                "description": "Deletes a single money transfer account based on the ID supplied",
                "parameters": [
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_cash_withdrawals/{userCashWithdrawalId}": {
            "get": {
                "summary": "Fetch user cash withdrawal",
                "description": "Returns a user cash withdrawal based on a single ID",
                "parameters": [
                    {
                        "name": "userCashWithdrawalId",
                        "in": "path",
                        "description": "ID of user cash withdrawal to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawal",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user cash withdrawal by its id",
                "description": "Update user cash withdrawal by its id",
                "parameters": [
                    {
                        "name": "userCashWithdrawalId",
                        "in": "path",
                        "description": "ID of user cash withdrawal to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user cash withdrawal JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserCashWithdrawal"
                        }
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "User Cash Withdrawal updated",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_cash_withdrawals": {
            "get": {
                "summary": "Fetch all user cash withdrawals",
                "description": "Returns all user cash withdrawals from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawals",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user cash withdrawal",
                "description": "Creates a new user cash withdrawal",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user cash withdrawal JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserCashWithdrawal"
                        }
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawals",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "summary": "Fetch all contacts",
                "description": "Returns all contacts from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched contacts",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new contact",
                "description": "Creates a new contact",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The contact JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addContact"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "New contact added",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/contacts/{contactId}": {
            "get": {
                "summary": "Fetch contact",
                "description": "Returns a contact based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "ID of contact to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched contact",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete contact",
                "description": "Deletes a single contact based on the ID supplied",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "ID of contact to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "summary": "Fetch all transactions",
                "description": "Returns all transactions from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of user to fetch transaction",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Transactions"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched transactions",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways": {
            "get": {
                "summary": "Fetch all payment gateways",
                "description": "Returns all payment gateways from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter payment gateway",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched payment gateways",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/{paymentGatewayId}": {
            "get": {
                "summary": "Fetch payment gateway",
                "description": "Returns a payment gateway based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "ID of payment gateway to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched payment gateway",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update payment gateway by its id",
                "description": "Update payment gateway by its id",
                "parameters": [
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "ID of payment gateway to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The payment gateway JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPaymentGateway"
                        }
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Payment Gateway updated",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/sudopay_synchronize": {
            "get": {
                "summary": "Synchronize ZazPay gateways",
                "description": "Synchronize ZazPay gateways",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "ZazPay payment gateways synchronized"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/list": {
            "get": {
                "summary": "Filter  payment gateways",
                "description": "Filter payment gateways",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Filter payment gateways."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/get_gateways": {
            "get": {
                "summary": "Get gateways details",
                "description": "Get gateways details",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Get gateways details."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pages": {
            "get": {
                "summary": "Fetch all pages",
                "description": "Returns all pages from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter page",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched pages",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new page",
                "description": "Creates a new page",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The page JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPage"
                        }
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "New page added",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pages/{pageId}": {
            "get": {
                "summary": "Fetch page",
                "description": "Returns a page based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched page",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update page by its id",
                "description": "Update page by its id",
                "parameters": [
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The page JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPage"
                        }
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Page updated",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete page",
                "description": "Deletes a single page based on the ID supplied",
                "parameters": [
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Page deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/setting_categories": {
            "get": {
                "summary": "Fetch all setting categories",
                "description": "Returns all setting categories from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "SettingCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched setting categories",
                        "schema": {
                            "$ref": "#/definitions/SettingCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/setting_categories/{settingCategoryId}": {
            "get": {
                "summary": "Fetch setting category",
                "description": "Returns a setting category based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "settingCategoryId",
                        "in": "path",
                        "description": "ID of setting category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "SettingCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched setting category",
                        "schema": {
                            "$ref": "#/definitions/SettingCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "summary": "Fetch all settings",
                "description": "Returns all settings from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched settings",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/settings/{settingId}": {
            "get": {
                "summary": "Fetch setting",
                "description": "Returns a setting based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "settingId",
                        "in": "path",
                        "description": "ID of setting to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched setting",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update setting by its id",
                "description": "Update setting by its id",
                "parameters": [
                    {
                        "name": "settingId",
                        "in": "path",
                        "description": "ID of setting to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The setting JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addSetting"
                        }
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Setting updated",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/email_templates": {
            "get": {
                "summary": "Fetch all email templates",
                "description": "Returns all email templates from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched email templates",
                        "schema": {
                            "$ref": "#/definitions/EmailTemplate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/email_templates/{emailTemplateId}": {
            "get": {
                "summary": "Fetch email template",
                "description": "Returns a email template based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "ID of email template to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched email template",
                        "schema": {
                            "$ref": "#/definitions/EmailTemplate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update email template by its id",
                "description": "Update email template by its id",
                "parameters": [
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "ID of email template to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The email template JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addEmailTemplate"
                        }
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Email Template updated",
                        "schema": {
                            "$ref": "#/definitions/EmailTemplate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "summary": "Fetch all cities",
                "description": "Returns all cities from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter city",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched cities",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new city",
                "description": "Creates a new city",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The city JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "New city added",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cities/{cityId}": {
            "get": {
                "summary": "Fetch city",
                "description": "Returns a city based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of city to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched city",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update city by its id",
                "description": "Update city by its id",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of city to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The city JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "City updated",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete city",
                "description": "Deletes a single city based on the ID supplied",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of city to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "City deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/states": {
            "get": {
                "summary": "Fetch all states",
                "description": "Returns all states from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter state",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched states",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new state",
                "description": "Creates a new state",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The state JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "New state added",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/states/{stateId}": {
            "get": {
                "summary": "Fetch state",
                "description": "Returns a state based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "ID of state to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched state",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update state by its id",
                "description": "Update state by its id",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "ID of state to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The state JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "State updated",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete state",
                "description": "Deletes a single state based on the ID supplied",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "ID of state to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "State deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "summary": "Fetch all countries",
                "description": "Returns all countries from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched countries",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new country",
                "description": "Creates a new country",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The country JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "New country added",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/countries/{countryId}": {
            "get": {
                "summary": "Fetch country",
                "description": "Returns a country based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of country to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched country",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update country by its id",
                "description": "Update country by its id",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of country to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The country JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Country updated",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete country",
                "description": "Deletes a single country based on the ID supplied",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of country to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Country deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/languages": {
            "get": {
                "summary": "Fetch all languages",
                "description": "Returns all languages from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter language",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched languages",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new language",
                "description": "Creates a new language",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The language JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "New language added",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/languages/{languageId}": {
            "get": {
                "summary": "Fetch language",
                "description": "Returns a language based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "ID of language to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched language",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update language by its id",
                "description": "Update language by its id",
                "parameters": [
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "ID of language to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The language JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Language updated",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete language",
                "description": "Deletes a single language based on the ID supplied",
                "parameters": [
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "ID of language to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Language deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "summary": "Site stats",
                "description": "Site stats",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Stats"
                ],
                "responses": {
                    "200": {
                        "description": "Site stats"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/attachments": {
            "post": {
                "summary": "Upload attachment",
                "description": "Upload attachment",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "type": "file"
                    }
                ],
                "tags": [
                    "Attachment"
                ],
                "responses": {
                    "200": {
                        "description": "File uploaded successfully"
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/attachments/{attachmentId}": {
            "delete": {
                "summary": "Delete attachment",
                "description": "Deletes a single attachment based on the ID supplied",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "ID of attachment to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Attachment"
                ],
                "responses": {
                    "200": {
                        "description": "Attachment deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurants": {
            "post": {
                "summary": "Creates a new restaurant",
                "description": "Creates a new restaurant",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurant"
                        }
                    }
                ],
                "tags": [
                    "Restaurant"
                ],
                "responses": {
                    "200": {
                        "description": "New restaurant added.",
                        "schema": {
                            "$ref": "#/definitions/addRestaurant"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all restaurants",
                "description": "Returns all restaurants from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "radius",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort value 'distance'",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cuisine",
                        "in": "query",
                        "description": "Cuisine filter",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Restaurant"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurants",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurants/{restaurantId}": {
            "delete": {
                "summary": "Delete restaurant",
                "description": "Deletes a single restaurant based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "Restaurant Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Restaurant"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update restaurant by its id",
                "description": "Update restaurant by its id",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "Restaurant Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editRestaurant"
                        }
                    }
                ],
                "tags": [
                    "Restaurant"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant updated",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch restaurant",
                "description": "Returns a restaurant based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "Restaurant Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Restaurant"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurants/slug/{restaurantSlug}": {
            "get": {
                "summary": "Get restaurant by its slug",
                "description": "Get restaurant by its slug",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keyword to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantSlug",
                        "in": "path",
                        "description": "Restaurant Slug",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Restaurant"
                ],
                "responses": {
                    "200": {
                        "description": "Get restaurant."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_timings": {
            "get": {
                "summary": "Fetch all restaurant timings",
                "description": "Returns all restaurant timings from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter restaurant timing",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantTiming"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant timings",
                        "schema": {
                            "$ref": "#/definitions/RestaurantTiming"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new restaurant timing based on corresponding restaurant",
                "description": "Creates a new restaurant timing based on corresponding restaurant",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "query",
                        "description": "Restaurant Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant timing JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestaurantTiming"
                        }
                    }
                ],
                "tags": [
                    "RestaurantTiming"
                ],
                "responses": {
                    "200": {
                        "description": "Create restaurant timing",
                        "schema": {
                            "$ref": "#/definitions/RestaurantTiming"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_timings/{restaurantTimingId}": {
            "get": {
                "summary": "Fetched restaurant timing",
                "description": "Returns a restaurant timing based on a single ID",
                "parameters": [
                    {
                        "name": "restaurantTimingId",
                        "in": "path",
                        "description": "ID of restaurant timing to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantId",
                        "in": "query",
                        "description": "Restaurant Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantTiming"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant timing",
                        "schema": {
                            "$ref": "#/definitions/RestaurantTiming"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update restaurant timing by its id",
                "description": "Update restaurant timing by its id",
                "parameters": [
                    {
                        "name": "restaurantTimingId",
                        "in": "path",
                        "description": "ID of restaurant timing to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantId",
                        "in": "query",
                        "description": "Restaurant Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant timing JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/restaurantTimingUpdate"
                        }
                    }
                ],
                "tags": [
                    "RestaurantTiming"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Timing updated",
                        "schema": {
                            "$ref": "#/definitions/RestaurantTiming"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete restaurant timing",
                "description": "Deletes a single restaurant timing based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "query",
                        "description": "Restaurant Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantTimingId",
                        "in": "path",
                        "description": "ID of restaurant timing to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantTiming"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Timing deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_supervisors": {
            "get": {
                "summary": "Fetch all restaurant supervisors",
                "description": "Returns all restaurant supervisors from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter restaurant supervisor",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantSupervisor"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant supervisors",
                        "schema": {
                            "$ref": "#/definitions/RestaurantSupervisor"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new restaurant supervisor",
                "description": "Creates a new restaurant supervisor",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant supervisor JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/restaurantsupervisors"
                        }
                    }
                ],
                "tags": [
                    "RestaurantSupervisor"
                ],
                "responses": {
                    "200": {
                        "description": "New restaurant supervisor added",
                        "schema": {
                            "$ref": "#/definitions/restaurantsupervisors"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_supervisors/{restaurantSupervisorId}": {
            "get": {
                "summary": "Fetch restaurant supervisor",
                "description": "Returns a restaurant supervisor based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantSupervisorId",
                        "in": "path",
                        "description": "ID of restaurant supervisor to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantSupervisor"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant supervisor"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete restaurant supervisor",
                "description": "Deletes a single restaurant supervisor based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantSupervisorId",
                        "in": "path",
                        "description": "ID of restaurant supervisor to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantSupervisor"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Supervisor deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update restaurant supervisor by its id",
                "description": "Update restaurant supervisor by its id",
                "parameters": [
                    {
                        "name": "restaurantSupervisorId",
                        "in": "path",
                        "description": "ID of restaurant supervisor to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant supervisor JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/restaurantsupervisors"
                        }
                    }
                ],
                "tags": [
                    "RestaurantSupervisor"
                ],
                "responses": {
                    "200": {
                        "description": "Updated supervisors information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/restaurantsupervisors"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurants/{restaurantId}/restaurant_supervisors/{restaurantSupervisorId}/restaurant_delivery_persons/{restaurantDeliveryPersonId}": {
            "put": {
                "summary": "Update restaurant delivery person by its id",
                "description": "Update restaurant delivery person by its id",
                "parameters": [
                    {
                        "name": "restaurantDeliveryPersonId",
                        "in": "path",
                        "description": "ID of restaurant delivery person to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "Restaurant Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantSupervisorId",
                        "in": "path",
                        "description": "Restaurant Superviosr ID",
                        "required": true,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant delivery person JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantDeliveryPerson"
                        }
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPerson"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Delivery Person updated",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPerson"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete restaurant delivery person",
                "description": "Deletes a single restaurant delivery person based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "Restaurant Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantSupervisorId",
                        "in": "path",
                        "description": "Restaurant Superviosr ID",
                        "required": true,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantDeliveryPersonId",
                        "in": "path",
                        "description": "ID of restaurant delivery person to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPerson"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Delivery Person deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch restaurant delivery person",
                "description": "Returns a restaurant delivery person based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "Restaurant Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantSupervisorId",
                        "in": "path",
                        "description": "Restaurant Superviosr ID",
                        "required": true,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantDeliveryPersonId",
                        "in": "path",
                        "description": "ID of restaurant delivery person to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPerson"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant delivery person",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPerson"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_supervisors/{restaurantSupervisorId}/restaurant_delivery_persons": {
            "get": {
                "summary": "Fetch restaurant delivery person",
                "description": "Returns restaurant delivery person based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantSupervisorId",
                        "in": "path",
                        "description": "Restaurant Supervisor Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPerson"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant delivery person",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPerson"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_delivery_persons": {
            "get": {
                "summary": "Fetch all restaurant delivery persons",
                "description": "Returns all restaurant delivery persons from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter restaurant delivery person",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPerson"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant delivery persons",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPerson"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new restaurant delivery person",
                "description": "Creates a new restaurant delivery person",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant delivery person JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantDeliveryPerson"
                        }
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPerson"
                ],
                "responses": {
                    "200": {
                        "description": "New restaurant delivery person added",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPerson"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_delivery_persons/{restaurantDeliveryPersonId}": {
            "get": {
                "summary": "Fetch restaurant delivery person",
                "description": "Returns a restaurant delivery person based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantDeliveryPersonId",
                        "in": "path",
                        "description": "ID of restaurant delivery person to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPerson"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant delivery person",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPerson"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete restaurant delivery person",
                "description": "Deletes a single restaurant delivery person based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantDeliveryPersonId",
                        "in": "path",
                        "description": "ID of restaurant delivery person to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPerson"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Delivery Person deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update restaurant delivery person by its id",
                "description": "Update restaurant delivery person by its id",
                "parameters": [
                    {
                        "name": "restaurantDeliveryPersonId",
                        "in": "path",
                        "description": "ID of restaurant delivery person to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant delivery person JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantDeliveryPerson"
                        }
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPerson"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Delivery Person updated",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPerson"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_delivery_person_orders": {
            "post": {
                "summary": "Creates a new restaurant delivery person order",
                "description": "Creates a new restaurant delivery person order",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant delivery person order JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantDeliveryPersonOrder"
                        }
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPersonOrder"
                ],
                "responses": {
                    "200": {
                        "description": "New restaurant delivery person order added",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPersonOrder"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all restaurant delivery person orders",
                "description": "Returns all restaurant delivery person orders from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPersonOrder"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant delivery person orders",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPersonOrder"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_delivery_person_orders/{restaurantDeliveryPersonOrderId}": {
            "get": {
                "summary": "Fetch restaurant delivery person order",
                "description": "Returns a restaurant delivery person order based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantDeliveryPersonOrderId",
                        "in": "path",
                        "description": "ID of restaurant delivery person order to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPersonOrder"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant delivery person order",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPersonOrder"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update restaurant delivery person order by its id",
                "description": "Update restaurant delivery person order by its id",
                "parameters": [
                    {
                        "name": "restaurantDeliveryPersonOrderId",
                        "in": "path",
                        "description": "ID of restaurant delivery person order to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant delivery person order JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantDeliveryPersonOrder"
                        }
                    }
                ],
                "tags": [
                    "RestaurantDeliveryPersonOrder"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Delivery Person Order updated",
                        "schema": {
                            "$ref": "#/definitions/RestaurantDeliveryPersonOrder"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cuisines": {
            "post": {
                "summary": "Creates a new cuisine",
                "description": "Creates a new cuisine",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The cuisine JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCuisine"
                        }
                    }
                ],
                "tags": [
                    "Cuisine"
                ],
                "responses": {
                    "200": {
                        "description": "Create admin restaurant cuisines added",
                        "schema": {
                            "$ref": "#/definitions/addCuisine"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all cuisines",
                "description": "Returns all cuisines from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter cuisine",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "Restaurant Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Cuisine"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched cuisines",
                        "schema": {
                            "$ref": "#/definitions/Cuisine"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cuisines/{restaurantCuisineId}": {
            "put": {
                "summary": "Update cuisine by its id",
                "description": "Update cuisine by its id",
                "parameters": [
                    {
                        "name": "restaurantCuisineId",
                        "in": "path",
                        "description": "ID of restaurantCuisineId to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The cuisine JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCuisine"
                        }
                    }
                ],
                "tags": [
                    "Cuisine"
                ],
                "responses": {
                    "200": {
                        "description": "Cuisine updated",
                        "schema": {
                            "$ref": "#/definitions/Cuisine"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete cuisine",
                "description": "Deletes a single cuisine based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantCuisineId",
                        "in": "path",
                        "description": "ID of cuisine to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Cuisine"
                ],
                "responses": {
                    "200": {
                        "description": "Cuisine deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_categories": {
            "get": {
                "summary": "Fetch all restaurant categories",
                "description": "Returns all restaurant categories from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter restaurant category",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant categories",
                        "schema": {
                            "$ref": "#/definitions/RestaurantCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new restaurant category",
                "description": "Creates a new restaurant category",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestaurantCategory"
                        }
                    }
                ],
                "tags": [
                    "RestaurantCategory"
                ],
                "responses": {
                    "200": {
                        "description": "New restaurant category added",
                        "schema": {
                            "$ref": "#/definitions/RestaurantCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_categories/{restaurantCategoryId}": {
            "get": {
                "summary": "Fetch restaurant category",
                "description": "Returns a restaurant category based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantCategoryId",
                        "in": "path",
                        "description": "ID of restaurant category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant category",
                        "schema": {
                            "$ref": "#/definitions/RestaurantCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update restaurant category by its id",
                "description": "Update restaurant category by its id",
                "parameters": [
                    {
                        "name": "restaurantCategoryId",
                        "in": "path",
                        "description": "ID of restaurant category to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantCategory"
                        }
                    }
                ],
                "tags": [
                    "RestaurantCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Category updated",
                        "schema": {
                            "$ref": "#/definitions/RestaurantCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete restaurant category",
                "description": "Deletes a single restaurant category based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantCategoryId",
                        "in": "path",
                        "description": "ID of restaurant category to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Category deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_menus": {
            "get": {
                "summary": "Fetch all restaurant menus",
                "description": "Returns all restaurant menus from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter restaurant menu",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantMenu"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant menus",
                        "schema": {
                            "$ref": "#/definitions/RestaurantMenu"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new restaurant menu",
                "description": "Creates a new restaurant menu",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The menu JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddRestaurantMenu"
                        }
                    }
                ],
                "tags": [
                    "RestaurantMenu"
                ],
                "responses": {
                    "200": {
                        "description": "New restaurant menu added",
                        "schema": {
                            "$ref": "#/definitions/AddRestaurantMenu"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_menus/{restaurantMenuId}": {
            "delete": {
                "summary": "Delete restaurant menu",
                "description": "Deletes a single restaurant menu based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantMenuId",
                        "in": "path",
                        "description": "ID of restaurantMenu to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantMenu"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Menu deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update restaurant menu by its id",
                "description": "Update restaurant menu by its id",
                "parameters": [
                    {
                        "name": "restaurantMenuId",
                        "in": "path",
                        "description": "ID of restaurant menu to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurantMenu JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestaurantMenuUpdate"
                        }
                    }
                ],
                "tags": [
                    "RestaurantMenu"
                ],
                "responses": {
                    "200": {
                        "description": "The restaurant menu JSON you want to post",
                        "schema": {
                            "$ref": "#/definitions/RestaurantMenuUpdate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch restaurant menu",
                "description": "Returns a restaurant menu based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantMenuId",
                        "in": "path",
                        "description": "ID of restaurant menu to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantMenu"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant menu"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_addons": {
            "get": {
                "summary": "Fetch all restaurant addons",
                "description": "Returns all restaurant addons from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter restaurant addon",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantAddon"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant addons",
                        "schema": {
                            "$ref": "#/definitions/RestaurantAddon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new restaurant addon",
                "description": "Creates a new restaurant addon",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant addon JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantAddon"
                        }
                    }
                ],
                "tags": [
                    "RestaurantAddon"
                ],
                "responses": {
                    "200": {
                        "description": "New restaurant addon added",
                        "schema": {
                            "$ref": "#/definitions/RestaurantAddon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_addons/{restaurantAddonId}": {
            "get": {
                "summary": "Fetch restaurant addon",
                "description": "Returns a restaurant addon based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantAddonId",
                        "in": "path",
                        "description": "ID of restaurant addon to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantAddon"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant addon",
                        "schema": {
                            "$ref": "#/definitions/RestaurantAddon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update restaurant addon by its id",
                "description": "Update restaurant addon by its id",
                "parameters": [
                    {
                        "name": "restaurantAddonId",
                        "in": "path",
                        "description": "ID of restaurant addon to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant addon JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateRestaurantAddon"
                        }
                    }
                ],
                "tags": [
                    "RestaurantAddon"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Addon updated",
                        "schema": {
                            "$ref": "#/definitions/RestaurantAddon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete restaurant addon",
                "description": "Deletes a single restaurant addon based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantAddonId",
                        "in": "path",
                        "description": "ID of restaurant addon to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantAddon"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Addon deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_reviews": {
            "get": {
                "summary": "Fetch all restaurant reviews",
                "description": "Returns all restaurant reviews from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter restaurant review",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantReview"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant reviews",
                        "schema": {
                            "$ref": "#/definitions/RestaurantReview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new restaurant review",
                "description": "Creates a new restaurant review",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant review JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantReview"
                        }
                    }
                ],
                "tags": [
                    "RestaurantReview"
                ],
                "responses": {
                    "200": {
                        "description": "New restaurant review added",
                        "schema": {
                            "$ref": "#/definitions/RestaurantReview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_reviews/{restaurantReviewId}": {
            "get": {
                "summary": "Fetch restaurant review",
                "description": "Returns a restaurant review based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurantReviewId",
                        "in": "path",
                        "description": "ID of restaurant review to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantReview"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant review",
                        "schema": {
                            "$ref": "#/definitions/RestaurantReview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update restaurant review by its id",
                "description": "Update restaurant review by its id",
                "parameters": [
                    {
                        "name": "restaurantReviewId",
                        "in": "path",
                        "description": "ID of restaurant review to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The restaurant review JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantReview"
                        }
                    }
                ],
                "tags": [
                    "RestaurantReview"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Review updated",
                        "schema": {
                            "$ref": "#/definitions/RestaurantReview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete restaurant review",
                "description": "Deletes a single restaurant review based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantReviewId",
                        "in": "path",
                        "description": "ID of restaurant review to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantReview"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Review deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_cuisines": {
            "get": {
                "summary": "Fetch all restaurant cuisines",
                "description": "Returns all restaurant cuisines from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantCuisine"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant cuisines",
                        "schema": {
                            "$ref": "#/definitions/RestaurantCuisine"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurant_cuisines/{restaurantCuisineId}": {
            "get": {
                "summary": "Fetch restaurant cuisine",
                "description": "Returns a restaurant cuisine based on a single ID",
                "parameters": [
                    {
                        "name": "restaurantCuisineId",
                        "in": "path",
                        "description": "ID of restaurant cuisine to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RestaurantCuisine"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched restaurant cuisine",
                        "schema": {
                            "$ref": "#/definitions/RestaurantCuisine"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete restaurant cuisine",
                "description": "Deletes a single restaurant cuisine based on the ID supplied",
                "parameters": [
                    {
                        "name": "restaurantCuisineId",
                        "in": "path",
                        "description": "ID of restaurant cuisine to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RestaurantCuisine"
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant Cuisine deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orders/{orderId}/reorder": {
            "post": {
                "summary": "Add reorder",
                "description": "Add reorder",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of order",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "New order added",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/checkout": {
            "post": {
                "summary": "Creates a new order",
                "description": "Creates a new order",
                "parameters": [
                    {
                        "name": "cookie_id",
                        "in": "query",
                        "description": "Cookie Id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User Id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The order JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addOrder"
                        }
                    }
                ],
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "New order added",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "summary": "Fetch all orders",
                "description": "Returns all orders from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "Restaurant Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurant_branch_id",
                        "in": "query",
                        "description": "Restaurant Branch Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched orders",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orders/{orderId}": {
            "get": {
                "summary": "Fetch order",
                "description": "Returns a order based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of order to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched order",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update order by its id",
                "description": "Update order by its id",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of order to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "ID of restaurant to update",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The order JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateOrder"
                        }
                    }
                ],
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Order updated",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/updateOrder"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orders/{trackId}/track": {
            "get": {
                "summary": "Fetch order",
                "description": "Returns a order based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "trackId",
                        "in": "path",
                        "description": "trackId of order to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched order",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/restaurants/{restaurantId}/orders/{orderId}": {
            "put": {
                "summary": "Update order by its id",
                "description": "Update order by its id",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of order to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "Restaurant Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The order JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateOrderStatus"
                        }
                    }
                ],
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Order updated",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/updateOrderStatus"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_addresses/{userAddressId}": {
            "get": {
                "summary": "Fetch user address",
                "description": "Returns a user address based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userAddressId",
                        "in": "path",
                        "description": "ID of user address to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user address",
                        "schema": {
                            "$ref": "#/definitions/UserAddress"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user address by its id",
                "description": "Update user address by its id",
                "parameters": [
                    {
                        "name": "userAddressId",
                        "in": "path",
                        "description": "ID of user address to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user address JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserAddress"
                        }
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "User Address updated",
                        "schema": {
                            "$ref": "#/definitions/UserAddress"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user address",
                "description": "Deletes a single user address based on the ID supplied",
                "parameters": [
                    {
                        "name": "userAddressId",
                        "in": "path",
                        "description": "ID of user address to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "User Address deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_addresses": {
            "get": {
                "summary": "Fetch all user addresses",
                "description": "Returns all user addresses from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user address",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant_id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user_id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user addresses",
                        "schema": {
                            "$ref": "#/definitions/UserAddress"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user address",
                "description": "Creates a new user address",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user address JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserAddress"
                        }
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "New user address added",
                        "schema": {
                            "$ref": "#/definitions/UserAddress"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/post_gateways": {
            "post": {
                "summary": "Create new post gateway",
                "description": "Create new post gateway",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The post gateway JSON you want to post.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPostGateway"
                        }
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "New PostGateway added.",
                        "schema": {
                            "$ref": "#/definitions/addPostGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/carts": {
            "get": {
                "summary": "Fetch cart",
                "description": "Returns a cart based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cookie_id",
                        "in": "query",
                        "description": "User cart lists by cookieId",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched cart",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new cart",
                "description": "Creates a new cart",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The cart JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCart"
                        }
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "New cart added",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/carts/{cartId}": {
            "put": {
                "summary": "Update cart by its id",
                "description": "Update cart by its id",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "description": "Cart Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "cookie_id",
                        "in": "query",
                        "description": "User cart lists by cookieId",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The cart JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCart"
                        }
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "Cart updated",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete cart",
                "description": "Deletes a single cart based on the ID supplied",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "description": "Cart Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "cookie_id",
                        "in": "query",
                        "description": "User cart lists by cookieId",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "Cart deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/carts/{cookieId}/checkout": {
            "post": {
                "summary": "Creates a new cart",
                "description": "Creates a new cart",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "cookieId",
                        "in": "path",
                        "description": "Cookie Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The cart JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addOrder"
                        }
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "New cart added",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateway_settings/{paymentGatewayId}": {
            "put": {
                "summary": "Updated Payment Gateway Settings information",
                "description": "Updated Payment Gateway Settings information",
                "parameters": [
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "PaymentGatewayId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update payment gateway settings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantAddon"
                        }
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Updated addons information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/updatePaymentGateways"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/coupons": {
            "get": {
                "summary": "Fetch all coupons",
                "description": "Returns all coupons from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter coupon",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched coupons",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new coupon",
                "description": "Creates a new coupon",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The coupon JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCoupon"
                        }
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "New coupon added",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/coupons/{couponId}": {
            "get": {
                "summary": "Fetch coupon",
                "description": "Returns a coupon based on a single ID",
                "parameters": [
                    {
                        "name": "couponId",
                        "in": "path",
                        "description": "ID of coupon to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter coupon",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched coupon",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update coupon by its id",
                "description": "Update coupon by its id",
                "parameters": [
                    {
                        "name": "couponId",
                        "in": "path",
                        "description": "ID of coupon to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The coupon JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCoupon"
                        }
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "Coupon updated",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete coupon",
                "description": "Deletes a single coupon based on the ID supplied",
                "parameters": [
                    {
                        "name": "couponId",
                        "in": "path",
                        "description": "ID of coupon to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "Coupon deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/coupons/get_status/{coupon_code}": {
            "get": {
                "summary": "Fetch coupon",
                "description": "Returns a coupon based on a single ID",
                "parameters": [
                    {
                        "name": "coupon_code",
                        "in": "path",
                        "description": "Id of coupon code to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched coupon",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/translations": {
            "get": {
                "summary": "Fetch all translations",
                "description": "Returns all translations from the system",
                "parameters": [
                    {
                        "name": "lang_code",
                        "in": "query",
                        "description": "lang code to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "file_list",
                        "in": "query",
                        "description": "File list to search(filelist)",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Translation"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched translations",
                        "schema": {
                            "$ref": "#/definitions/Translation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new Translation",
                "description": "Creates a new Translation",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The transaltion JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addTranslation"
                        }
                    }
                ],
                "tags": [
                    "Translation"
                ],
                "responses": {
                    "200": {
                        "description": "New translation added",
                        "schema": {
                            "$ref": "#/definitions/Translation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/translations/{langCode}": {
            "put": {
                "summary": "Edit Translation",
                "description": "Edit Translation",
                "parameters": [
                    {
                        "name": "langCode",
                        "in": "path",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The transaltion JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editTranslation"
                        }
                    }
                ],
                "tags": [
                    "Translation"
                ],
                "responses": {
                    "200": {
                        "description": "Update Translation",
                        "schema": {
                            "$ref": "#/definitions/updateTranslation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/device_details": {
            "get": {
                "summary": "Fetch all device details",
                "description": "Returns all device details from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "DeviceDetail"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched device details",
                        "schema": {
                            "$ref": "#/definitions/DeviceDetail"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new device detail",
                "description": "Creates a new device detail",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The device detail JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addDeviceDetail"
                        }
                    }
                ],
                "tags": [
                    "DeviceDetail"
                ],
                "responses": {
                    "200": {
                        "description": "New device detail added",
                        "schema": {
                            "$ref": "#/definitions/DeviceDetail"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/device_details/{deviceDetailId}": {
            "get": {
                "summary": "Fetch device detail",
                "description": "Returns a device detail based on a single ID",
                "parameters": [
                    {
                        "name": "deviceDetailId",
                        "in": "path",
                        "description": "ID of device detail to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "DeviceDetail"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched device detail",
                        "schema": {
                            "$ref": "#/definitions/DeviceDetail"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete device detail",
                "description": "Deletes a single device detail based on the ID supplied",
                "parameters": [
                    {
                        "name": "deviceDetailId",
                        "in": "path",
                        "description": "ID of device detail to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "DeviceDetail"
                ],
                "responses": {
                    "200": {
                        "description": "Device Detail deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/wallets": {
            "get": {
                "summary": "Fetch all wallets",
                "description": "Returns all wallets from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Wallet"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched wallets",
                        "schema": {
                            "$ref": "#/definitions/Wallet"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new wallet",
                "description": "Creates a new wallet",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The wallet JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addWallet"
                        }
                    }
                ],
                "tags": [
                    "Wallet"
                ],
                "responses": {
                    "200": {
                        "description": "New wallet added",
                        "schema": {
                            "$ref": "#/definitions/Wallet"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "activateUser": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "hash": {
                    "type": "string",
                    "format": "string",
                    "description": "hash code"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "user_type_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User Types"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "gender_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "dob": {
                    "type": "string",
                    "format": "date"
                },
                "about_me": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "address1": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "zip_code": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "phone": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "available_wallet_amount": {
                    "type": "number",
                    "format": "float"
                },
                "last_login_ip_id": {
                    "type": "string"
                },
                "last_logged_in_time": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_email_confirmed": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_agree_terms_conditions": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_subscribed": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "loginUser": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "format": "string",
                    "description": "Username of the user."
                },
                "password": {
                    "type": "string",
                    "format": "string",
                    "description": "Password of the user."
                }
            }
        },
        "forgotUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "Email ID"
                },
                "access_from": {
                    "type": "string",
                    "description": "access_from."
                },
                "captcha_response": {
                    "type": "string",
                    "description": "captcha_response."
                }
            }
        },
        "addUser": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "first_name."
                },
                "last_name": {
                    "type": "string",
                    "description": "last_name."
                },
                "mobile": {
                    "type": "string",
                    "description": "mobile."
                },
                "mobile_code": {
                    "type": "string",
                    "description": "mobile_code."
                },
                "username": {
                    "type": "string",
                    "description": "username."
                },
                "email": {
                    "type": "string",
                    "description": "Email."
                },
                "password": {
                    "type": "string",
                    "description": "Password."
                },
                "is_agree_terms_conditions": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is agree terms conditions."
                },
                "is_create_an_account": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_become_restaurant": {
                    "type": "integer",
                    "format": "int32"
                },
                "restaurants": {
                    "$ref": "#/definitions/registerRestaurant"
                },
                "access_from": {
                    "type": "string",
                    "description": "access_from."
                },
                "captcha_response": {
                    "type": "string",
                    "description": "captcha_response."
                }
            }
        },
        "registerRestaurant": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "estimated_time_to_delivery": {
                    "type": "string"
                },
                "delivery_charge": {
                    "type": "string"
                },
                "delivery_miles": {
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "updateUser": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "type": "number",
                    "format": "double"
                },
                "mobile": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Phone number."
                },
                "mobile_code": {
                    "type": "string",
                    "description": "mobile_code."
                }
            }
        },
        "changePasswordUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "User password."
                },
                "new_password": {
                    "type": "string",
                    "description": "User new password."
                }
            }
        },
        "addProvider": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "api_key": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addSociallogin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "access_token": {
                    "type": "string"
                },
                "oauth_verifier": {
                    "type": "string"
                },
                "oauth_token": {
                    "type": "string"
                },
                "redirectUri": {
                    "type": "string"
                }
            }
        },
        "Provider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "api_key": {
                    "type": "string"
                },
                "icon_class": {
                    "type": "string"
                },
                "button_class": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "position": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addRestaurantReview": {
            "type": "object",
            "required": [
                "user_id",
                "restaurant_id",
                "order_id",
                "rating",
                "message",
                "is_active"
            ],
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "order_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "rating": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RestaurantReview": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "order_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "rating": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addCart": {
            "type": "object",
            "required": [
                "cookie_id",
                "user_id",
                "restaurant_menu_id",
                "restaurant_menu_price_id",
                "quantity",
                "price",
                "total_price",
                "restaurant_id"
            ],
            "properties": {
                "cookie_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_menu_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_menu_price_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "type": "number",
                    "format": "float"
                },
                "total_price": {
                    "type": "number",
                    "format": "float"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_menu_addon_price": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/restaurantMenuPriceAddOnId"
                    }
                }
            }
        },
        "restaurantMenuPriceAddOnId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Cart": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "cookie_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_menu_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_menu_price_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "type": "number",
                    "format": "float"
                },
                "total_price": {
                    "type": "number",
                    "format": "float"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addOrder": {
            "type": "object",
            "properties": {
                "is_allow_users_to_door_delivery_order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Door delivery available."
                },
                "address_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Address id."
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "payment_gateway_id."
                },
                "success_url": {
                    "type": "string",
                    "format": "string"
                },
                "cancel_url": {
                    "type": "string",
                    "format": "string"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "gateway_id."
                },
                "coupon_code": {
                    "type": "string",
                    "format": "string"
                },
                "user_address": {
                    "$ref": "#/definitions/addOrderUserAddress"
                }
            }
        },
        "updateOrder": {
            "type": "object",
            "properties": {
                "is_as_soon_as_delivery": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Delivery or pickup."
                },
                "later_delivery_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Deliver date and time."
                },
                "comment": {
                    "type": "string",
                    "format": "string",
                    "description": "Address."
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "description": "Address."
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "zip_code": {
                    "type": "string",
                    "format": "string",
                    "description": "Zip Code."
                },
                "phone": {
                    "type": "string",
                    "format": "string",
                    "description": "phone number."
                },
                "voucher_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Voucher ID."
                },
                "restaurant_offer_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant Offer ID."
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Payment Gateway ID."
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Sudopay payment gateway id."
                },
                "restaurant_branch_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant branch ID."
                },
                "credit_card_number": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Credit card number."
                },
                "credit_card_expire": {
                    "type": "string",
                    "format": "string",
                    "description": "credit card expire E.g.'10/18'."
                },
                "credit_card_name_on_card": {
                    "type": "string",
                    "format": "string",
                    "description": "Credit card name."
                },
                "credit_card_code": {
                    "type": "integer",
                    "format": "int64",
                    "description": "credit card cvv number."
                },
                "payment_note": {
                    "type": "string",
                    "format": "string",
                    "description": "Payment note for manual payment."
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "address": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "order_status_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "voucher_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_offer_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "restaurant_branch_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_as_soon_as_delivery": {
                    "type": "integer",
                    "format": "int32"
                },
                "total_price": {
                    "type": "number",
                    "format": "float"
                },
                "delivery_charge": {
                    "type": "number",
                    "format": "float"
                },
                "sales_tax": {
                    "type": "number",
                    "format": "float"
                },
                "is_pickup_or_delivery": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "zip_code": {
                    "type": "string"
                },
                "later_delivery_date": {
                    "type": "string"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_delivery_person_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addOrderUserAddress": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "format": "string",
                    "description": "Title of the address book."
                },
                "building_address": {
                    "type": "string",
                    "format": "string",
                    "description": "building name of the address book."
                },
                "address2": {
                    "type": "string",
                    "format": "string",
                    "description": "Address of the address book."
                },
                "landmark": {
                    "type": "string",
                    "format": "string",
                    "description": "Landmark of the address book."
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Latitude."
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Longitude."
                },
                "zip_code": {
                    "type": "string",
                    "format": "string",
                    "description": "Zipcode."
                }
            }
        },
        "addUserAddress": {
            "type": "object",
            "required": [
                "user_id",
                "title",
                "building_address",
                "address2",
                "landmark",
                "latitude",
                "longitude",
                "is_active"
            ],
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "title": {
                    "type": "string"
                },
                "building_address": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "landmark": {
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "zip_code": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UserAddress": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "title": {
                    "type": "string"
                },
                "building_address": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "landmark": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "zip_code": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RestaurantCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "image": {
                    "$ref": "#/definitions/addImage"
                }
            }
        },
        "addImage": {
            "type": "object",
            "properties": {
                "attachment": {
                    "type": "string",
                    "description": "attachment"
                },
                "image_data": {
                    "type": "string",
                    "description": "image_data"
                }
            }
        },
        "addRestaurantCategory": {
            "type": "object",
            "required": [
                "restaurant_id",
                "name",
                "is_active"
            ],
            "properties": {
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "attachment_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "RestaurantTiming": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "string",
                    "format": "string",
                    "description": "day."
                },
                "period": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/restaurantTimingPeriod"
                    }
                }
            }
        },
        "restaurantTimingPeriod": {
            "type": "object",
            "properties": {
                "peroid_type": {
                    "type": "integer",
                    "format": "int32",
                    "description": "period Type."
                },
                "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time."
                },
                "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time."
                }
            }
        },
        "restaurantTimingUpdate": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "string",
                    "format": "string",
                    "description": "day."
                },
                "period_type": {
                    "type": "integer",
                    "format": "int32",
                    "description": "period."
                },
                "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time."
                },
                "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time."
                }
            }
        },
        "restaurantsupervisors": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors username."
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors email."
                },
                "mobile": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors mobile."
                },
                "first_name": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors first name."
                },
                "last_name": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors last name."
                },
                "gender_id": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors genger."
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors genger."
                },
                "address1": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors genger."
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "zip_code": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors zip code."
                },
                "about_me": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors country_id."
                },
                "restaurant_branch_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "restaurant branch id."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int64",
                    "description": "supervisors status."
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "restaurant id."
                }
            }
        },
        "RestaurantSupervisor": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_branch_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RestaurantDeliveryPerson": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_branch_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_supervisor_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "username": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person username."
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person email."
                },
                "mobile": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person mobile."
                },
                "first_name": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person first name."
                },
                "last_name": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person last name."
                },
                "gender_id": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person gender."
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person address."
                },
                "address1": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person address1."
                },
                "city_name": {
                    "type": "string",
                    "description": "City name."
                },
                "state_name": {
                    "type": "string",
                    "description": "State name."
                },
                "country_id": {
                    "type": "string",
                    "description": "Country Iso2"
                },
                "zip_code": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person zip code."
                },
                "about_me": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery person about ."
                }
            }
        },
        "addRestaurantDeliveryPerson": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors username."
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors email."
                },
                "mobile": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors mobile."
                },
                "first_name": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors first name."
                },
                "last_name": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors last name."
                },
                "gender_id": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors genger."
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors genger."
                },
                "address1": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors genger."
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "zip_code": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors zip code."
                },
                "about_me": {
                    "type": "string",
                    "format": "string",
                    "description": "supervisors country_id."
                },
                "restaurant_branch_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "restaurant branch id."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int64",
                    "description": "supervisors status."
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "restaurant id."
                },
                "restaurant_supervisor_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addRestaurantAddon": {
            "type": "object",
            "required": [
                "restaurant_id",
                "restaurant_category_id",
                "name",
                "is_active"
            ],
            "properties": {
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "restaurant_addon_item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addRestaurantAddonItem"
                    }
                }
            }
        },
        "updateRestaurantAddon": {
            "type": "object",
            "properties": {
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "restaurant_addon_item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/updateRestaurantAddonItem"
                    }
                }
            }
        },
        "addRestaurantAddonItem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "updateRestaurantAddonItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "RestaurantAddon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addRestaurant": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant name."
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "restaurant id."
                },
                "email": {
                    "type": "string",
                    "description": "email."
                },
                "phone": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant phone."
                },
                "mobile": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant mobile."
                },
                "mobile_code": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant mobile code."
                },
                "fax": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant fax."
                },
                "contact_name": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant contact name."
                },
                "contact_phone": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant contact phone."
                },
                "website": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant website."
                },
                "address1": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant address1."
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant address."
                },
                "zip_code": {
                    "type": "string",
                    "format": "string",
                    "description": "zipcode."
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Latitude."
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Longitude."
                },
                "sales_tax": {
                    "type": "number",
                    "format": "float",
                    "description": "Sales tax"
                },
                "minimum_order_for_booking": {
                    "type": "number",
                    "format": "float",
                    "description": "Minmum order booking"
                },
                "is_allow_users_to_door_delivery_order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Allow user door delivery."
                },
                "estimated_time_to_delivery": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Estimated time to delivery."
                },
                "delivery_charge": {
                    "type": "number",
                    "format": "float",
                    "description": "Delivery charge."
                },
                "delivery_miles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Delivery miles."
                },
                "image": {
                    "$ref": "#/definitions/addImage"
                },
                "cuisine": {
                    "$ref": "#/definitions/addRestaurantCuisine"
                },
                "restaurant_photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addRestaurantPhoto"
                    }
                },
                "shop_trading_certificate": {
                    "$ref": "#/definitions/addImage"
                }
            }
        },
        "editRestaurant": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user Id."
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant name."
                },
                "phone": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant phone."
                },
                "mobile": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant mobile."
                },
                "mobile_code": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant mobile code."
                },
                "fax": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant fax."
                },
                "contact_name": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant contact name."
                },
                "contact_phone": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant contact phone."
                },
                "website": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant website."
                },
                "address1": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant address1."
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant address."
                },
                "zip_code": {
                    "type": "string",
                    "format": "string",
                    "description": "zipcode."
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Latitude."
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Longitude."
                },
                "sales_tax": {
                    "type": "number",
                    "format": "float",
                    "description": "Sales tax"
                },
                "minimum_order_for_booking": {
                    "type": "number",
                    "format": "float",
                    "description": "Minmum order booking"
                },
                "is_allow_users_to_door_delivery_order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Allow user door delivery."
                },
                "estimated_time_to_delivery": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Estimated time to delivery."
                },
                "delivery_charge": {
                    "type": "number",
                    "format": "float",
                    "description": "Delivery charge."
                },
                "delivery_miles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Delivery miles."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Status."
                },
                "cuisine": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addRestaurantCuisine"
                    }
                },
                "restaurant_photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addRestaurantPhoto"
                    }
                },
                "shop_trading_certificate": {
                    "$ref": "#/definitions/addImage"
                }
            }
        },
        "Restaurant": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant name."
                },
                "email": {
                    "type": "string",
                    "description": "email."
                },
                "phone": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant phone."
                },
                "mobile": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant mobile."
                },
                "fax": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant fax."
                },
                "contact_name": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant contact name."
                },
                "contact_phone": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant contact phone."
                },
                "website": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant website."
                },
                "address1": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant address1."
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "description": "restaurant address."
                },
                "zip_code": {
                    "type": "string",
                    "format": "string",
                    "description": "zipcode."
                },
                "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Latitude."
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Longitude."
                },
                "sales_tax": {
                    "type": "number",
                    "format": "float",
                    "description": "Sales tax"
                },
                "minimum_order_for_booking": {
                    "type": "number",
                    "format": "float",
                    "description": "Minmum order booking"
                },
                "is_allow_users_to_door_delivery_order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Allow user door delivery."
                },
                "estimated_time_to_delivery": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Estimated time to delivery."
                },
                "delivery_charge": {
                    "type": "number",
                    "format": "float",
                    "description": "Delivery charge."
                },
                "delivery_miles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Delivery miles."
                },
                "slug": {
                    "type": "string",
                    "description": "Slug of restaurant."
                }
            }
        },
        "addRestaurantCuisine": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "cuisine Id."
                }
            }
        },
        "addCountry": {
            "type": "object",
            "properties": {
                "iso2": {
                    "type": "string"
                },
                "iso_alpha3": {
                    "type": "string"
                },
                "iso_numeric": {
                    "type": "integer",
                    "format": "int32"
                },
                "fips_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "capital": {
                    "type": "string"
                },
                "areainsqkm": {
                    "type": "number",
                    "format": "float"
                },
                "population": {
                    "type": "integer",
                    "format": "int32"
                },
                "continent": {
                    "type": "string"
                },
                "tld": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "currencyname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postalcodeformat": {
                    "type": "string"
                },
                "postalcoderegex": {
                    "type": "string"
                },
                "languages": {
                    "type": "string"
                },
                "geonameid": {
                    "type": "integer",
                    "format": "int32"
                },
                "neighbours": {
                    "type": "string"
                },
                "equivalentfipscode": {
                    "type": "string"
                }
            }
        },
        "Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "iso2": {
                    "type": "string"
                },
                "iso_alpha3": {
                    "type": "string"
                },
                "iso_numeric": {
                    "type": "integer",
                    "format": "int32"
                },
                "fips_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "capital": {
                    "type": "string"
                },
                "areainsqkm": {
                    "type": "number",
                    "format": "float"
                },
                "population": {
                    "type": "integer",
                    "format": "int32"
                },
                "continent": {
                    "type": "string"
                },
                "tld": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "currencyname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postalcodeformat": {
                    "type": "string"
                },
                "postalcoderegex": {
                    "type": "string"
                },
                "languages": {
                    "type": "string"
                },
                "geonameid": {
                    "type": "integer",
                    "format": "int32"
                },
                "neighbours": {
                    "type": "string"
                },
                "equivalentfipscode": {
                    "type": "string"
                }
            }
        },
        "addState": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of State."
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Country id ."
                },
                "state_code": {
                    "type": "string",
                    "description": "State code of State."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                }
            }
        },
        "State": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "state_code": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addCity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of City."
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Country id of City."
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "State id of City."
                },
                "city_code": {
                    "type": "string",
                    "description": "City code of City."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                }
            }
        },
        "City": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addPaymentGateway": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gateway_fees": {
                    "type": "number",
                    "format": "float"
                },
                "is_test_mode": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_for_wallet": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PaymentGateway": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gateway_fees": {
                    "type": "number",
                    "format": "float"
                },
                "transaction_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "payment_gateway_setting_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_test_mode": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_for_wallet": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addPage": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "title."
                },
                "content": {
                    "type": "string",
                    "description": "content."
                },
                "meta_keywords": {
                    "type": "string",
                    "description": "meta keywords."
                },
                "meta_description": {
                    "type": "string",
                    "description": "meta description."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is approved."
                }
            }
        },
        "Page": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "meta_keywords": {
                    "type": "string"
                },
                "description_meta_tag": {
                    "type": "string"
                },
                "is_default": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addLanguage": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "iso2": {
                    "type": "string"
                },
                "iso3": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Language": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "iso2": {
                    "type": "string"
                },
                "iso3": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AddRestaurantMenu": {
            "type": "object",
            "properties": {
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant id."
                },
                "cuisine_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Cuisine id."
                },
                "restaurant_category_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant category id."
                },
                "menu_type_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Menu type id."
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "is_addon": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is addon."
                },
                "is_popular": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is popular."
                },
                "is_spicy": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is spicy."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                },
                "restaurant_menu_price": {
                    "$ref": "#/definitions/restaurantMenuPrice"
                },
                "image": {
                    "$ref": "#/definitions/addImage"
                },
                "color": {
                    "type": "string",
                    "description": "Color."
                },
                "stock": {
                    "type": "string",
                    "description": "Stock."
                }
            }
        },
        "RestaurantMenu": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "cuisine_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "menu_type_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "is_addon": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_popular": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_spicy": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "attachment_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "RestaurantMenuUpdate": {
            "type": "object",
            "properties": {
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant id."
                },
                "cuisine_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Cuisine id."
                },
                "restaurant_category_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant category id."
                },
                "menu_type_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Menu type id."
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "is_addon": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is addon."
                },
                "is_popular": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is popular."
                },
                "is_spicy": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is spicy."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                },
                "image": {
                    "$ref": "#/definitions/addImage"
                },
                "restaurant_menu_price": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/restaurantMenuPriceUpdate"
                    }
                },
                "restaurant_addon": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/restaurantAddonUpdate"
                    }
                }
            }
        },
        "restaurantMenuPriceUpdate": {
            "type": "object",
            "properties": {
                "restaurant_menu_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "price_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Price type ID"
                },
                "price_type_name": {
                    "type": "string",
                    "description": "Price type name"
                },
                "price": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "restaurantAddonUpdate": {
            "type": "object",
            "required": [
                "restaurant_id",
                "restaurant_category_id",
                "name",
                "is_active"
            ],
            "properties": {
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "restaurant_addon_item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/restaurantAddonItemUpdate"
                    }
                }
            }
        },
        "restaurantAddonItemUpdate": {
            "type": "object",
            "required": [
                "restaurant_addon_id",
                "name",
                "is_active"
            ],
            "properties": {
                "restaurant_addon_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "restaurant_menu_addon_price": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/restaurantMenuAddonPriceUpdate"
                    }
                }
            }
        },
        "restaurantMenuAddonPriceUpdate": {
            "type": "object",
            "required": [
                "restaurant_menu_id",
                "restaurant_addon_item_id",
                "restaurant_addon_id",
                "price",
                "is_active",
                "is_free"
            ],
            "properties": {
                "restaurant_menu_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant Menu ID"
                },
                "restaurant_addon_item_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restaurant Addon Item ID"
                },
                "restaurant_addon_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Restaurant Addon ID"
                },
                "price": {
                    "type": "number",
                    "format": "float"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_free": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "restaurantMenuPrice": {
            "type": "object",
            "properties": {
                "restaurant_menu_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "price_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Price type ID"
                },
                "price_type_name": {
                    "type": "string",
                    "description": "Price type name"
                },
                "price": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "addCuisine": {
            "type": "object",
            "required": [
                "name",
                "is_active"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Cuisine": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addMoneyTransferAccount": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "format": "string",
                    "description": "account."
                },
                "is_primary": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Primary."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Status."
                }
            }
        },
        "MoneyTransferAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "account": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_primary": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SettingCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "addSetting": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Setting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "setting_category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "setting_category_parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "format": "int32"
                },
                "options": {
                    "type": "string"
                }
            }
        },
        "addContact": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "ip_id": {
                    "type": "string"
                }
            }
        },
        "addRestaurantPhoto": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                }
            }
        },
        "addUserCashWithdrawal": {
            "type": "object",
            "required": [
                "amount",
                "money_transfer_account_id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "money_transfer_account_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UserCashWithdrawal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "remark": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "money_transfer_account_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "withdrawal_status_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "updateOrderStatus": {
            "type": "object",
            "properties": {
                "order_status_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Change order status."
                },
                "restaurant_delivery_person_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Change restaurant_delivery_person_id."
                }
            }
        },
        "addRestaurantBranch": {
            "type": "object",
            "required": [
                "restaurant_id",
                "name",
                "address",
                "is_active",
                "latitude",
                "longitude"
            ],
            "properties": {
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "zip_code": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "address1": {
                    "type": "string"
                }
            }
        },
        "addRestaurantDeliveryPersonOrder": {
            "type": "object",
            "required": [
                "restaurant_delivery_person_id",
                "order_id",
                "is_delivered",
                "restaurant_id",
                "restaurant_supervisor_id",
                "restaurant_branch_id"
            ],
            "properties": {
                "restaurant_delivery_person_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "order_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "comments": {
                    "type": "string"
                },
                "is_delivered": {
                    "type": "integer",
                    "format": "int32"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_supervisor_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_branch_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "RestaurantDeliveryPersonOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "restaurant_delivery_person_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "order_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "comments": {
                    "type": "string"
                },
                "is_delivered": {
                    "type": "integer",
                    "format": "int32"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_supervisor_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_branch_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "EmailTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "format": "string"
                },
                "display_name": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string",
                    "format": "string"
                },
                "from": {
                    "type": "string",
                    "format": "string"
                },
                "reply_to": {
                    "type": "string",
                    "format": "string"
                },
                "subject": {
                    "type": "string",
                    "format": "string"
                },
                "email_variables": {
                    "type": "string",
                    "format": "string"
                },
                "html_email_content": {
                    "type": "string",
                    "format": "string"
                },
                "text_email_content": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "addEmailTemplate": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string",
                    "format": "string"
                },
                "reply_to": {
                    "type": "string",
                    "format": "string"
                },
                "subject": {
                    "type": "string",
                    "format": "string"
                },
                "html_email_content": {
                    "type": "string",
                    "format": "string"
                },
                "text_email_content": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "addAttachment": {
            "type": "object",
            "properties": {
                "attachment": {
                    "type": "string"
                }
            }
        },
        "editCountry": {
            "type": "object",
            "properties": {
                "iso2": {
                    "type": "string"
                }
            }
        },
        "editState": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "editCity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "class": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "other_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "transaction_type_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "gateway_fees": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "addPostGateway": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name value."
                }
            }
        },
        "updatePaymentGateways": {
            "type": "object",
            "properties": {
                "sudopay_merchant_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "sudopay_merchant_id."
                },
                "sudopay_website_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "sudopay_website_id"
                },
                "sudopay_secret_string": {
                    "type": "integer",
                    "format": "int64",
                    "description": "sudopay_secret_string."
                },
                "sudopay_api_key": {
                    "type": "integer",
                    "format": "int64",
                    "description": "sudopay_api_key."
                }
            }
        },
        "addCoupon": {
            "type": "object",
            "required": [
                "user_id",
                "restaurant_id",
                "coupon_code",
                "discount",
                "is_flat_discount_in_amount",
                "maximum_discount_amount",
                "is_active"
            ],
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "coupon_code": {
                    "type": "string"
                },
                "discount": {
                    "type": "number",
                    "format": "float"
                },
                "is_flat_discount_in_amount": {
                    "type": "boolean"
                },
                "no_of_quantity_allowed": {
                    "type": "integer",
                    "format": "int64"
                },
                "validity_start_date": {
                    "type": "string",
                    "format": "date"
                },
                "validity_end_date": {
                    "type": "string",
                    "format": "date"
                },
                "maximum_discount_amount": {
                    "type": "number",
                    "format": "float"
                },
                "is_active": {
                    "type": "boolean"
                }
            }
        },
        "Coupon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "coupon_code": {
                    "type": "string"
                },
                "discount": {
                    "type": "number",
                    "format": "float"
                },
                "is_flat_discount_in_amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "no_of_quantity_allowed": {
                    "type": "integer",
                    "format": "int64"
                },
                "no_of_quantity_used": {
                    "type": "integer",
                    "format": "int64"
                },
                "validity_start_date": {
                    "type": "string",
                    "format": "date"
                },
                "validity_end_date": {
                    "type": "string",
                    "format": "date"
                },
                "maximum_discount_amount": {
                    "type": "number",
                    "format": "float"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addTranslation": {
            "type": "object",
            "properties": {
                "lang_code": {
                    "type": "string"
                }
            }
        },
        "editTranslation": {
            "type": "object",
            "properties": {
                "keyword": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addNewKey"
                    }
                }
            }
        },
        "addNewKey": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "lang_text": {
                    "type": "string"
                }
            }
        },
        "Translation": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "updateTranslation": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "addDeviceDetail": {
            "type": "object",
            "required": [
                "latitude",
                "longitude",
                "devicetype"
            ],
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appname": {
                    "type": "string"
                },
                "appversion": {
                    "type": "string"
                },
                "deviceuid": {
                    "type": "string"
                },
                "devicetoken": {
                    "type": "string"
                },
                "devicename": {
                    "type": "string"
                },
                "devicemodel": {
                    "type": "string"
                },
                "deviceversion": {
                    "type": "string"
                },
                "pushbadge": {
                    "type": "string"
                },
                "pushalert": {
                    "type": "string"
                },
                "pushsound": {
                    "type": "string"
                },
                "development": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "devicetype": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DeviceDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appname": {
                    "type": "string"
                },
                "appversion": {
                    "type": "string"
                },
                "deviceuid": {
                    "type": "string"
                },
                "devicetoken": {
                    "type": "string"
                },
                "devicename": {
                    "type": "string"
                },
                "devicemodel": {
                    "type": "string"
                },
                "deviceversion": {
                    "type": "string"
                },
                "pushbadge": {
                    "type": "string"
                },
                "pushalert": {
                    "type": "string"
                },
                "pushsound": {
                    "type": "string"
                },
                "development": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "devicetype": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RestaurantCuisine": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "restaurant_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "cuisine_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addWallet": {
            "type": "object",
            "required": [
                "amount",
                "payment_gateway_id",
                "gateway_id",
                "name",
                "email",
                "address",
                "city",
                "state",
                "country",
                "phone",
                "zip_code",
                "credit_card_code",
                "credit_card_expire",
                "credit_card_name_on_card",
                "credit_card_number"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "phone": {
                    "type": "integer",
                    "format": "int64"
                },
                "zip_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_expire": {
                    "type": "string"
                },
                "credit_card_name_on_card": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "integer",
                    "format": "int64"
                },
                "success_url": {
                    "type": "string"
                },
                "cancel_url": {
                    "type": "string"
                }
            }
        },
        "Wallet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_payment_completed": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}